[{"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\index.js":"1","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\App.js":"2","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\store.js":"3","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\reducers\\messageReducer.js":"4","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\constants\\messageConstants.js":"5","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\actions\\messageActions.js":"6","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\screen\\HomeScreen.jsx":"7","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\screen\\ReceiveScreen.jsx":"8","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\screen\\SendScreen.jsx":"9","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\components\\Header.jsx":"10"},{"size":602,"mtime":1607151953136,"results":"11","hashOfConfig":"12"},{"size":744,"mtime":1607389167718,"results":"13","hashOfConfig":"12"},{"size":580,"mtime":1607404154726,"results":"14","hashOfConfig":"12"},{"size":1126,"mtime":1607474806236,"results":"15","hashOfConfig":"12"},{"size":384,"mtime":1607039757575,"results":"16","hashOfConfig":"12"},{"size":1768,"mtime":1607658196196,"results":"17","hashOfConfig":"12"},{"size":3697,"mtime":1607658400016,"results":"18","hashOfConfig":"12"},{"size":3939,"mtime":1607474889726,"results":"19","hashOfConfig":"12"},{"size":3957,"mtime":1607474251475,"results":"20","hashOfConfig":"12"},{"size":1172,"mtime":1607159700733,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"uv8tbd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\index.js",[],["44","45"],"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\App.js",[],"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\store.js",[],"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\reducers\\messageReducer.js",[],"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\constants\\messageConstants.js",[],"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\actions\\messageActions.js",[],"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\screen\\HomeScreen.jsx",["46","47","48","49","50","51","52","53","54","55","56"],"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\screen\\ReceiveScreen.jsx",["57"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Row, Spinner } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMessage } from \"../actions/messageActions\";\r\n\r\nconst ReceiveScreen = () => {\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [isLoadingMessage, setIsLoadingMessage] = useState(false);\r\n  const [messageLoaded, setMessageLoaded] = useState(false);\r\n  const [isFailed, setIsFailed] = useState(false);\r\n\r\n  const [name, setName] = useState(\"Loading...\");\r\n  const [profilePicSrc, setProfilePicSrc] = useState(\"Loading...\");\r\n  const [info, setInfo] = useState(\"Loading...\");\r\n\r\n  const dispatch = useDispatch();\r\n  const messageReducer = useSelector((state) => state.messageReducer);\r\n  const { message } = messageReducer;\r\n\r\n  let url =\r\n    \"https://cdna.artstation.com/p/assets/images/images/020/387/082/large/taejune-kim-afternoon-1600-mark.jpg?1567584205\";\r\n\r\n  useEffect(() => {\r\n\r\n    if (message.msg !== undefined && (message.msg === \"getSuccess\" || message.msg === \"getFailed\")) {\r\n      setIsStart(false);\r\n      if (message.msg === \"getSuccess\") {\r\n        console.log(\"Message is success\");\r\n        setName(message.name);\r\n        setProfilePicSrc(message.profilePicSrc);\r\n        setInfo(message.message);\r\n        setMessageLoaded(true);\r\n      } else if(message.msg === \"getFailed\"){\r\n        console.log(\"Message is failed\");\r\n        setIsFailed(true);\r\n      }\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row\r\n        style={{\r\n          width: \"60%\",\r\n        }}\r\n        className=\"m-auto pt-5\"\r\n      >\r\n        {isStart === true && (\r\n          <Button\r\n            style={{ width: \"500px\", height: \"500px\", fontSize: \"5rem\" }}\r\n            className=\"m-auto\"\r\n            onClick={async () => {\r\n              setIsStart(false);\r\n              setIsLoadingMessage(true);\r\n\r\n              await dispatch(getMessage());\r\n\r\n              setIsLoadingMessage(false);\r\n            }}\r\n          >\r\n            <i\r\n              className=\"fas fa-hand-holding-heart\"\r\n              style={{ fontSize: \"5rem\" }}\r\n            ></i>{\" \"}\r\n            Get a Message!\r\n          </Button>\r\n        )}\r\n\r\n        {isLoadingMessage === true && (\r\n          <Spinner\r\n            animation=\"grow\"\r\n            style={{ width: \"500px\", height: \"500px\", background: \"#f4abc4\" }}\r\n            className=\"m-auto\"\r\n          />\r\n        )}\r\n\r\n        {messageLoaded === true && (\r\n          <Col md=\"auto\" className=\"m-auto\">\r\n            <Card style={{ width: \"600px\" }}>\r\n              <Card.Img variant=\"top\" src={profilePicSrc} />\r\n              <Card.Body>\r\n                <Card.Title>Sent by: {name}</Card.Title>\r\n                <Card.Text>{info}</Card.Text>\r\n\r\n                <Row className=\"m-auto\">\r\n                  <Col style={{ textAlign: \"center\" }}>\r\n                    <Button variant=\"primary\" className=\"m-auto\">\r\n                      Send A Message! <i className=\"fas fa-paper-plane\"></i>{\" \"}\r\n                    </Button>\r\n                  </Col>\r\n                  <Col style={{ textAlign: \"center\" }}>\r\n                    <Button variant=\"primary\">\r\n                      Get Another Message! <i className=\"fas fa-heart\"></i>{\" \"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n\r\n        {isFailed === true && (\r\n          <Col style={{ textAlign: \"center\" }}>\r\n            <i\r\n              className=\"fas fa-sad-tear\"\r\n              style={{ fontSize: \"400px\", marginBottom: \"20px\" }}\r\n            ></i>\r\n            <h1>We dont have any available messages, try sending one!</h1>\r\n            <small>Ps. You wont get the messages you sent*</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReceiveScreen;\r\n","C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\screen\\SendScreen.jsx",[],"C:\\Users\\rolan\\Desktop\\Prog proj\\RandMsg\\frontend\\src\\components\\Header.jsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":23,"nodeType":"64","messageId":"65","endLine":3,"endColumn":34},{"ruleId":"62","severity":1,"message":"66","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":20},{"ruleId":"62","severity":1,"message":"67","line":5,"column":22,"nodeType":"64","messageId":"65","endLine":5,"endColumn":33},{"ruleId":"62","severity":1,"message":"68","line":10,"column":9,"nodeType":"64","messageId":"65","endLine":10,"endColumn":17},{"ruleId":"62","severity":1,"message":"69","line":12,"column":10,"nodeType":"64","messageId":"65","endLine":12,"endColumn":15},{"ruleId":"62","severity":1,"message":"70","line":12,"column":17,"nodeType":"64","messageId":"65","endLine":12,"endColumn":25},{"ruleId":"62","severity":1,"message":"71","line":13,"column":10,"nodeType":"64","messageId":"65","endLine":13,"endColumn":14},{"ruleId":"62","severity":1,"message":"72","line":13,"column":16,"nodeType":"64","messageId":"65","endLine":13,"endColumn":23},{"ruleId":"62","severity":1,"message":"73","line":14,"column":10,"nodeType":"64","messageId":"65","endLine":14,"endColumn":17},{"ruleId":"62","severity":1,"message":"74","line":14,"column":19,"nodeType":"64","messageId":"65","endLine":14,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":17,"column":13,"nodeType":"77","endLine":23,"endColumn":4},{"ruleId":"62","severity":1,"message":"78","line":20,"column":7,"nodeType":"64","messageId":"65","endLine":20,"endColumn":10},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'getMessage' is defined but never used.","'sendMessage' is defined but never used.","'dispatch' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]